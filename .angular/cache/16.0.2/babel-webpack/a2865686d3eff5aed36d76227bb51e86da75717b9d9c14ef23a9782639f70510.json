{"ast":null,"code":"import { take, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.userSubject.pipe(take(1), map(user => {\n      const isAuth = !!user;\n      if (isAuth) return true;\n      console.log(\"masuk auth guard\");\n      return this.router.createUrlTree(['/auth']);\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["take","map","AuthGuard","constructor","authService","router","canActivate","route","state","userSubject","pipe","user","isAuth","console","log","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\u075900\\Documents\\GitHub\\Angular-Training-Mini-Project\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable, take, map } from \"rxjs\";\r\nimport { AuthService } from \"../service/auth/auth.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n  boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n      return this.authService.userSubject.pipe(\r\n        take(1),\r\n        map( user => {\r\n          const isAuth = !!user;\r\n          if(isAuth)\r\n            return true;\r\n\r\n            console.log(\"masuk auth guard\")\r\n          return this.router.createUrlTree(['/auth']);\r\n        })\r\n      )\r\n  }\r\n}"],"mappings":"AAEA,SAAqBA,IAAI,EAAEC,GAAG,QAAQ,MAAM;;;;AAI5C,MAGaC,SAAS;EAEpBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EAGhB;EAEAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAEjE,OAAO,IAAI,CAACJ,WAAW,CAACK,WAAW,CAACC,IAAI,CACtCV,IAAI,CAAC,CAAC,CAAC,EACPC,GAAG,CAAEU,IAAI,IAAG;MACV,MAAMC,MAAM,GAAG,CAAC,CAACD,IAAI;MACrB,IAAGC,MAAM,EACP,OAAO,IAAI;MAEXC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC,OAAO,IAAI,CAACT,MAAM,CAACU,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,CACH;EACL;;AAtBWb,SAAS,C;mBAATA,SAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATnB,SAAS,C;SAATA,SAAS;EAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPtB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}